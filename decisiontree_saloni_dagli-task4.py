# -*- coding: utf-8 -*-
"""DecisionTree.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Pbnp9gIJcWa2OCfIj-1CUJcO3zet3DvZ
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
from sklearn.preprocessing import LabelEncoder
from sklearn import tree
import seaborn as sns

"""Importing the Dataset"""

iris=pd.read_csv('Iris.csv')

iris

iris.drop(['Id'],axis=1,inplace=True)

iris.isnull().values.any()

"""Data Visualisation"""

plt.figure(figsize=(8,8))
sns.heatmap(iris.corr(),annot=True,square=True,cmap='viridis')
plt.yticks(rotation=0)

"""Splitting the dataset into dependent and independent variables and further splitting into training and test data"""

x=iris.iloc[:,:-1]
y=iris.iloc[:,-1]

x

y

from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.25, random_state = 0)

y_train

"""Fitting our training model to the classifier"""

from sklearn.tree import DecisionTreeClassifier
classifier = DecisionTreeClassifier(random_state = 0)
classifier.fit(x_train, y_train)

y_pred=classifier.predict(x_test)

"""Accuracy Score"""

from sklearn.metrics import accuracy_score
accuracy_score(y_test, y_pred)

"""Graphical Visualisation"""

from sklearn.tree import export_graphviz
from sklearn.externals.six import StringIO
from IPython.display import Image
import pydotplus

feature_columns=['SepalLengthCm','SepalWidthCm','PetalLengthCm','PetalWidthCm']

dot_data=StringIO()
export_graphviz(classifier.fit(x,y), out_file=dot_data, feature_names= feature_columns, filled=True,
                rounded=True, special_characters=True, precision=3)
graph=pydotplus.graph_from_dot_data(dot_data.getvalue())
Image(graph.create_png())